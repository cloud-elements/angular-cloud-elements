!function(e){e.module("angularCloudElements.config",[]).value("angularCloudElements.config",{debug:!0}),e.module("angularCloudElements.utilities",[]),e.module("angularCloudElements.directives",[]),e.module("angularCloudElements.filters",[]),e.module("angularCloudElements.services",[]),e.module("angularCloudElements",["angularCloudElements.config","angularCloudElements.utilities","angularCloudElements.directives","angularCloudElements.filters","angularCloudElements.services"])}(angular),function(){function e(e){function t(){var e=this.config.hasOwnProperty("userSecret"),t=this.config.hasOwnProperty("orgSecret"),n=this.config.hasOwnProperty("baseUrl");if(!(e&&t&&n))throw new Error("The configuration object is invalid")}function n(n){if(!angular.isObject(n))throw new Error("Options must be an object");this.config=n,t.bind(this),e.setHeaders(r({userSecret:this.config.userSecret,orgSecret:this.config.orgSecret})),e.setBaseUrl(this.config.baseUrl)}function r(e){var t=e.userSecret,n=e.orgSecret,r="User "+t+", Organization "+n;return{Authorization:r,"Content-Type":"application/json"}}var i={orgSecret:"",userSecret:"",baseUrl:""};return{config:i,validateConfig:t,setConfig:n}}angular.module("angularCloudElements.config").factory("ceAuth",e),e.$inject=["httpUtility"]}(),function(){"use strict";function e(e,t){function n(){return e.get("/instances")}function r(t){return e.get("/instances/"+t)}return t.validateConfig(),{getInstances:n,getInstance:r}}angular.module("angularCloudElements.services").factory("ceElements",e),e.$inject=["httpUtility","ceAuth"]}(),function(){"use strict";function e(e,t){function n(){return this.headers}function r(){return this.baseUrl}function i(e){return t({method:"GET",url:this.baseUrl+e}).then(function(e){return s(e)}).catch(function(e){return l(e)})}function u(e){this.headers=e}function o(e){this.baseUrl=e}function s(e){return e.data}function l(t){e.error(t)}return{handleApiResponse:s,handleApiFailure:l,setHeaders:u,setBaseUrl:o,getHeaders:n,getBaseUrl:r,get:i}}angular.module("angularCloudElements.utilities").factory("httpUtility",e),e.$inject=["$log","$http"]}();